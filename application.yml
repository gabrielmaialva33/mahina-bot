server: # REST and WS server
  port: 2333 # The port that the server listens on
  address: 0.0.0.0
  http2:
    enabled: false # Whether to enable HTTP/2 support
plugins:
  youtube:
    enabled: true # Whether this source can be used.
    allowSearch: true # Whether "ytsearch:" and "ytmsearch:" can be used.
    allowDirectVideoIds: true # Whether just video IDs can match. If false, only complete URLs will be loaded.
    allowDirectPlaylistIds: true # Whether just playlist IDs can match. If false, only complete URLs will be loaded.
    # The clients to use for track loading. See below for a list of valid clients.
    # Clients are queried in the order they are given (so the first client is queried first and so on...)
    clients:
      - MUSIC
      - WEB
      - ANDROID_TESTSUITE
      - ANDROID_MUSIC
      - TVHTML5EMBEDDED
      - ANDROID_LITE
      - MEDIA_CONNECT
      - IOS
  lavasrc:
    providers: # Custom providers for track loading. This is the default
      - 'ytsearch:"%ISRC%"'
      - 'ytsearch:%QUERY%'
      - 'ytmsearch:"%ISRC%"'
      - 'ytmsearch:%QUERY%'
      - 'scsearch:%QUERY%'
      - 'spsearch:%QUERY%'
      - 'sprec:%QUERY%'
      - 'amsearch:%QUERY%'
      - 'dzisrc:%ISRC%'
      - 'dzsearch:%QUERY%'
      - 'ymsearch:%QUERY%'
    sources:
      spotify: true # Enable Spotify source
      applemusic: true # Enable Apple Music source
      deezer: false # Enable Deezer source
      yandexmusic: false # Enable Yandex Music source
      flowerytts: true # Enable Flowery TTs source
      youtube: true # Enable YouTube search source (https://github.com/topi314/LavaSearch)
    lyrics-sources:
      spotify: false # Enable Spotify lyrics source
      deezer: false # Enable Deezer lyrics source
      youtube: false # Enable YouTube lyrics source
      yandexmusic: false # Enable Yandex Music lyrics source
    spotify:
      clientId: '530a978df3084f8b916e3f512a8c8bb1'
      clientSecret: '8a82bc47253a43beac406e0618297132'
      spDc: '' # the sp dc cookie used for accessing the spotify lyrics api
      countryCode: 'US' # the country code you want to use for filtering the artists top tracks. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      playlistLoadLimit: 6 # The number of pages at 100 tracks each
      albumLoadLimit: 6 # The number of pages at 50 tracks each
      localFiles: false # Enable local files support with Spotify playlists. Please note `uri` & `iscr` will be `null` & `identifier` will be `"local"`
    applemusic:
      countryCode: 'US' # the country code you want to use for filtering the artists top tracks and language. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      mediaAPIToken: 'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IldlYlBsYXlLaWQifQ.eyJpc3MiOiJBTVBXZWJQbGF5IiwiaWF0IjoxNzIxNzczNjI0LCJleHAiOjE3MjkwMzEyMjQsInJvb3RfaHR0cHNfb3JpZ2luIjpbImFwcGxlLmNvbSJdfQ.cMMhHLLazlxgiIbwBSSP1YuHCgqAVxiF7UQrwBc5xZepWt-vjqth_o4BidXFrmsEJvwzZKJ-GAMbqJpIeGcl7w' # apple music api token
      playlistLoadLimit: 6 # The number of pages at 300 tracks each
      albumLoadLimit: 6 # The number of pages at 300 tracks each
    deezer:
      masterDecryptionKey: '' # the master key used for decrypting the deezer tracks. (yes this is not here you need to get it from somewhere else)
    yandexmusic:
      accessToken: '' # the token used for accessing the yandex music api. See https://github.com/TopiSenpai/LavaSrc#yandex-music
      playlistLoadLimit: 1 # The number of pages at 100 tracks each
      albumLoadLimit: 1 # The number of pages at 50 tracks each
      artistLoadLimit: 1 # The number of pages at 10 tracks each
    flowerytts:
      voice: 'default voice' # (case-sensitive) get default voice here https://flowery.pw/docs/flowery/tts-voices-v-1-tts-voices-get
      translate: false # whether to translate the text to the native language of voice
      silence: 0 # the silence parameter is in milliseconds. Range is 0 to 10000. The default is 0.
      speed: 1.0 # the speed parameter is a float between 0.5 and 10. The default is 1.0. (0.5 is half speed, 2.0 is double speed, etc.)
      audioFormat: 'mp3' # supported formats are: mp3, ogg_opus, ogg_vorbis, aac, wav, and flac. Default format is mp3
    youtube:
      countryCode: 'US' # the country code you want to use for searching lyrics via ISRC. See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
  dunctebot:
    ttsLanguage: 'en-US' # language of the TTS engine
    sources:
      # true = source enabled, false = source disabled
      getyarn: true # www.getyarn.io
      clypit: true # www.clyp.it
      tts: true # speak:Words to speak
      pornhub: true # should be self-explanatory
      reddit: true # should be self-explanatory
      ocremix: true # www.ocremix.org
      tiktok: true # tiktok.com
      mixcloud: true # mixcloud.com
      soundgasm: true # soundgasm.net
  jiosaavn:
    apiURL: 'https://saavn.dev/api' # The API URL for JioSaavn
lavalink:
  plugins:
    - dependency: "com.github.appujet:jiosaavn-plugin:0.1.7"
      repository: "https://jitpack.io"
    - dependency: 'com.dunctebot:skybot-lavalink-plugin:1.7.0'
      snapshot: false # set to true if you want to use snapshot builds.
    - dependency: 'com.github.topi314.lavasearch:lavasearch-plugin:1.0.0'
      snapshot: false # set to true if you want to use snapshot builds (see below)
    - dependency: 'com.github.topi314.lavasrc:lavasrc-plugin:4.2.0'
      snapshot: false # set to true if you want to use snapshot builds.
    - dependency: 'com.github.topi314.sponsorblock:sponsorblock-plugin:3.0.1'
      snapshot: false # set to true if you want to use snapshot builds.
    - dependency: 'dev.lavalink.youtube:youtube-plugin:1.5.2'
      snapshot: false # set to true if you want to use snapshot builds.
  pluginsDir: './plugins'
  server:
    password: 'Mahina@551238'
    sources:
      # The default Youtube source is now deprecated and won't receive further updates. Please use https://github.com/lavalink-devs/youtube-source#plugin instead.
      youtube: false
      bandcamp: true
      soundcloud: true
      twitch: true
      vimeo: true
      mixer: true
      nico: true
      http: true
      local: false
    filters: # All filters are enabled by default
      volume: true
      equalizer: true
      karaoke: true
      timescale: true
      tremolo: true
      vibrato: true
      distortion: true
      rotation: true
      channelMix: true
      lowPass: true
    bufferDurationMs: 400 # The duration of the NAS buffer. Higher values fare better against longer GC pauses. Duration <= 0 to disable JDA-NAS. Minimum of 40ms, lower values may introduce
    frameBufferDurationMs: 1000 # How many milliseconds of audio to keep buffered
    opusEncodingQuality: 10 # Opus encoder quality. Valid values range from 0 to 10, where 10 is best quality but is the most expensive on the CPU.
    resamplingQuality: HIGH # Quality of resampling operations. Valid values are LOW, MEDIUM and HIGH, where HIGH uses the most CPU.
    trackStuckThresholdMs: 10000 # The threshold for how long a track can be stuck. A track is stuck if does not return any audio data.
    useSeekGhosting: true # Seek ghosting is the effect where whilst a seek is in progress, the audio buffer is read from until empty, or until seek is ready.
    youtubePlaylistLoadLimit: 6 # Number of pages at 100 each
    playerUpdateInterval: 5 # How frequently to send player updates to clients, in seconds
    youtubeSearchEnabled: true
    soundcloudSearchEnabled: true
    gc-warnings: true
    #ratelimit:
    #ipBlocks: ["2001:470:28:d66::/64"] # list of ip blocks
    #excludedIps: ["...", "..."] # ips which should be explicit excluded from usage by lavalink
    #strategy: "RotateOnBan" # RotateOnBan | LoadBalance | NanoSwitch | RotatingNanoSwitch
    #searchTriggersFail: true # Whether a search 429 should trigger marking the ip as failing
    #retryLimit: -1 # -1 = use default lavaplayer value | 0 = infinity | >0 = retry will happen this numbers times
    #youtubeConfig: # Required for avoiding all age restrictions by YouTube, some restricted videos still can be played without.
    #email: "" # Email of Google account
    #password: "" # Password of Google account
    #httpConfig: # Useful for blocking bad-actors from ip-grabbing your music node and attacking it, this way only the http proxy will be attacked
    #proxyHost: "localhost" # Hostname of the proxy, (ip or domain)
    #proxyPort: 3128 # Proxy port, 3128 is the default for squidProxy
    #proxyUser: "" # Optional user for basic authentication fields, leave blank if you don't use basic auth
    #proxyPassword: "" # Password for basic authentication
metrics:
  prometheus:
    enabled: false
    endpoint: /metrics

sentry:
  dsn: ''
  environment: ''
#  tags:
#    some_key: some_value
#    another_key: another_value

logging:
  file:
    path: ./logs/

  level:
    root: INFO
    lavalink: INFO

  request:
    enabled: true
    includeClientInfo: true
    includeHeaders: false
    includeQueryString: true
    includePayload: true
    maxPayloadLength: 10000

  logback:
    rollingpolicy:
      max-file-size: 1GB
      max-history: 30
